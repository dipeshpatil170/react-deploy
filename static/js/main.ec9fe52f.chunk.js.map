{"version":3,"sources":["api/index.ts","types/Types.tsx","api/balanceApi.ts","store/actions/balanceAction.ts","api/productsApi.ts","store/actions/productAction.ts","api/purchasedProductsApi.ts","store/actions/purchasedProductsAction.ts","pages/addMoneyPannel.tsx","components/AlertMessage.tsx","containers/singleProduct.tsx","containers/productsList.tsx","pages/product.tsx","components/ToastNotification.tsx","containers/singlePurchasedProduct.tsx","containers/purchasedProductList.tsx","pages/purchasedProducts.tsx","pages/wallet.tsx","App.tsx","reportWebVitals.ts","store/reducers/balanceReducer.ts","store/reducers/productReducer.ts","store/reducers/purchasedProductsReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["api","axios","create","baseURL","timeout","headers","Accept","FETCH_PRODUCTS_REQUEST","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","REMOVE_PRODUCT_REQUEST","REMOVE_PRODUCT_SUCCESS","REMOVE_PRODUCT_FAILURE","DECREMENT_PRODUCT_QUANTITY_REQUEST","DECREMENT_PRODUCT_QUANTITY_SUCCESS","DECREMENT_PRODUCT_QUANTITY_FAILURE","INCREMENT_PRODUCT_QUANTITY_REQUEST","INCREMENT_PRODUCT_QUANTITY_SUCCESS","INCREMENT_PRODUCT_QUANTITY_FAILURE","FETCH_BALANCE_REQUEST","FETCH_BALANCE_SUCCESS","FETCH_BALANCE_FAILURE","CREDIT_BALANCE_REQUEST","CREDIT_BALANCE_SUCCESS","CREDIT_BALANCE_FAILURE","DEBIT_BALANCE_REQUEST","DEBIT_BALANCE_SUCCESS","DEBIT_BALANCE_FAILURE","FETCH_PURCHASEDPRODUCTS_REQUEST","FETCH_PURCHASEDPRODUCTS_SUCCESS","FETCH_PURCHASEDPRODUCTS_FAILURE","fetchBalance","dispatch","type","setTimeout","a","get","then","response","balance","data","payload","catch","error","errorBalanceFetchMessage","e","message","creditBalance","balanceTobeCredit","newBalanceTobeCredit","amount","patch","errorCreditBalanceMessage","debitBalance","balanceTobeDebit","errorDebitBalanceMessage","fetchProducts","products","errorProductFetchMessage","decrementProductQuantity","id","quantity","product","errorDecrementProductQuantityMessage","incrementProductQuantity","incrementedQuantity","errorIncrementProductQuantityMessage","fetchPurchasedProducts","purchasedProducts","errorPurchasedProductsFetchMessage","addProduct","productTobePurchase","productId","name","price","image","post","purchasedProduct","removeProduct","purchaseProduct","delete","errorRemovePurchasedProductsMessage","AddMoneyPannel","useDispatch","bg","w","p","color","spacing","fontSize","boxShadow","rounded","direction","align","map","money","index","onClick","colorScheme","size","AlertMessage","status","title","description","mr","SingleProduct","handleBuyProduct","isPurchasedProductsFetching","padding","objectFit","src","alt","marginTop","pt","mt","disabled","Number","Add","marginLeft","h","ProductsList","border","templateColumns","gap","length","Product","useSelector","state","isProductFetching","isProductFetchSuccess","isProductFetchError","isIndeterminate","height","ToastNotification","toast","useToast","useEffect","isClosable","duration","position","SinglePurchasedProduct","handleRemovePurchasedProduct","Delete","PurchasedProductList","divider","borderColor","PurchasedProducts","isPurchasedProductsFetchError","isAddPurchasedProductSuccess","isAddPurchasedProductError","errorAddPurchasedProductsMessage","isRemovePurchasedProductSuccess","isRemovePurchasedProductError","Wallet","isBalanceFetching","isBalanceFetchSuccess","isBalanceFetchError","isCreditBalanceSuccess","isCreditBalanceError","App","maxW","py","textTransform","fontWeight","alignSelf","columns","base","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isDebitBalanceSuccess","isDebitBalanceError","isDecrementProductQuantitySuccess","isDecrementProductQuantityError","isIncrementProductQuantitySuccess","isIncrementProductQuantityError","isPurchasedProductsFetchSuccess","rootReducer","combineReducers","action","concat","filter","logger","createLogger","preloadedState","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","enhancers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec9fe52f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n   baseURL: 'http://localhost:3001',\r\n   timeout: 3000,\r\n   headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n   },\r\n})\r\n","export const FETCH_PRODUCTS_REQUEST = 'FETCH_PRODUCTS_REQUEST'\r\n\r\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS'\r\n\r\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE'\r\n\r\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\r\n\r\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\r\n\r\nexport const ADD_PRODUCT_FAILURE = 'ADD_PRODUCT_FAILURE'\r\n\r\nexport const REMOVE_PRODUCT_REQUEST = 'REMOVE_PRODUCT_REQUEST'\r\n\r\nexport const REMOVE_PRODUCT_SUCCESS = 'REMOVE_PRODUCT_SUCCESS'\r\n\r\nexport const REMOVE_PRODUCT_FAILURE = 'REMOVE_PRODUCT_FAILURE'\r\n\r\nexport const DECREMENT_PRODUCT_QUANTITY_REQUEST =\r\n   'DECREMENT_PRODUCT_QUANTITY_REQUEST'\r\n\r\nexport const DECREMENT_PRODUCT_QUANTITY_SUCCESS =\r\n   'DECREMENT_PRODUCT_QUANTITY_SUCCESS'\r\n\r\nexport const DECREMENT_PRODUCT_QUANTITY_FAILURE =\r\n   'DECREMENT_PRODUCT_QUANTITY_FAILURE'\r\n\r\nexport const INCREMENT_PRODUCT_QUANTITY_REQUEST =\r\n   'INCREMENT_PRODUCT_QUANTITY_REQUEST'\r\n\r\nexport const INCREMENT_PRODUCT_QUANTITY_SUCCESS =\r\n   'INCREMENT_PRODUCT_QUANTITY_SUCCESS'\r\n\r\nexport const INCREMENT_PRODUCT_QUANTITY_FAILURE =\r\n   'INCREMENT_PRODUCT_QUANTITY_FAILURE'\r\n\r\nexport const FETCH_BALANCE_REQUEST = 'FETCH_BALANCE_REQUEST'\r\n\r\nexport const FETCH_BALANCE_SUCCESS = 'FETCH_BALANCE_SUCCESS'\r\n\r\nexport const FETCH_BALANCE_FAILURE = 'FETCH_BALANCE_FAILURE'\r\n\r\nexport const CREDIT_BALANCE_REQUEST = 'CREDIT_BALANCE_REQUEST'\r\n\r\nexport const CREDIT_BALANCE_SUCCESS = 'CREDIT_BALANCE_SUCCESS'\r\n\r\nexport const CREDIT_BALANCE_FAILURE = 'CREDIT_BALANCE_FAILURE'\r\n\r\nexport const DEBIT_BALANCE_REQUEST = 'DEBIT_BALANCE_REQUEST'\r\n\r\nexport const DEBIT_BALANCE_SUCCESS = 'DEBIT_BALANCE_SUCCESS'\r\n\r\nexport const DEBIT_BALANCE_FAILURE = 'DEBIT_BALANCE_FAILURE'\r\n\r\nexport const FETCH_PURCHASEDPRODUCTS_REQUEST = 'FETCH_PURCHASEDPRODUCTS_REQUEST'\r\n\r\nexport const FETCH_PURCHASEDPRODUCTS_SUCCESS = 'FETCH_PURCHASEDPRODUCTS_SUCCESS'\r\n\r\nexport const FETCH_PURCHASEDPRODUCTS_FAILURE = 'FETCH_PURCHASEDPRODUCTS_FAILURE'\r\n","import { api } from '.'\r\nimport {\r\n   creditBalanceFailure,\r\n   creditBalanceRequest,\r\n   creditBalanceSuccess,\r\n   debitBalanceFailure,\r\n   debitBalanceRequest,\r\n   debitBalanceSuccess,\r\n   fetchBalanceFailure,\r\n   fetchBalanceRequest,\r\n   fetchBalanceSuccess,\r\n} from './../store/actions/balanceAction'\r\nexport const fetchBalance = () => {\r\n   return (dispatch: any) => {\r\n      dispatch(fetchBalanceRequest())\r\n      setTimeout(async () => {\r\n         await api\r\n            .get('/balance')\r\n            .then((response) => dispatch(fetchBalanceSuccess(response?.data)))\r\n            .catch((error) => dispatch(fetchBalanceFailure(error)))\r\n      }, 100)\r\n   }\r\n}\r\nexport const creditBalance = (balanceTobeCredit: number) => {\r\n   return async (dispatch: any) => {\r\n      const { data } = await api.get('/balance')\r\n      const newBalanceTobeCredit = data.amount + balanceTobeCredit\r\n      dispatch(creditBalanceRequest())\r\n      setTimeout(async () => {\r\n         await api\r\n            .patch('/balance', { amount: newBalanceTobeCredit })\r\n            .then((response) => dispatch(creditBalanceSuccess(response?.data)))\r\n            .catch((error) => dispatch(creditBalanceFailure(error)))\r\n      }, 1000)\r\n   }\r\n}\r\nexport const debitBalance = (balanceTobeDebit: number) => {\r\n   return async (dispatch: any) => {\r\n      dispatch(debitBalanceRequest())\r\n      await api\r\n         .patch('/balance', { amount: balanceTobeDebit })\r\n         .then((response) => dispatch(debitBalanceSuccess(response?.data)))\r\n         .catch((error) => dispatch(debitBalanceFailure(error)))\r\n   }\r\n}\r\n","import {\r\n   DEBIT_BALANCE_FAILURE,\r\n   DEBIT_BALANCE_REQUEST,\r\n   DEBIT_BALANCE_SUCCESS,\r\n   FETCH_BALANCE_FAILURE,\r\n   FETCH_BALANCE_REQUEST,\r\n   FETCH_BALANCE_SUCCESS,\r\n} from '../../types/Types'\r\nimport {\r\n   CREDIT_BALANCE_FAILURE,\r\n   CREDIT_BALANCE_REQUEST,\r\n   CREDIT_BALANCE_SUCCESS,\r\n} from './../../types/Types'\r\n\r\nexport const fetchBalanceRequest = () => {\r\n   return {\r\n      type: FETCH_BALANCE_REQUEST,\r\n   }\r\n}\r\n\r\nexport const fetchBalanceSuccess = (balance: Ibalance) => {\r\n   return {\r\n      type: FETCH_BALANCE_SUCCESS,\r\n      payload: { balance: balance },\r\n   }\r\n}\r\n\r\nexport const fetchBalanceFailure = (e: Error) => {\r\n   return {\r\n      type: FETCH_BALANCE_FAILURE,\r\n      payload: {\r\n         errorBalanceFetchMessage: e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\nexport const creditBalanceRequest = () => {\r\n   return {\r\n      type: CREDIT_BALANCE_REQUEST,\r\n   }\r\n}\r\n\r\nexport const creditBalanceSuccess = (balance: Ibalance) => {\r\n   return {\r\n      type: CREDIT_BALANCE_SUCCESS,\r\n      payload: { balance: balance },\r\n   }\r\n}\r\n\r\nexport const creditBalanceFailure = (e: Error) => {\r\n   return {\r\n      type: CREDIT_BALANCE_FAILURE,\r\n      payload: {\r\n         errorCreditBalanceMessage: e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\nexport const debitBalanceRequest = () => {\r\n   return {\r\n      type: DEBIT_BALANCE_REQUEST,\r\n   }\r\n}\r\n\r\nexport const debitBalanceSuccess = (balance: Ibalance) => {\r\n   return {\r\n      type: DEBIT_BALANCE_SUCCESS,\r\n      payload: { balance: balance },\r\n   }\r\n}\r\n\r\nexport const debitBalanceFailure = (e: Error) => {\r\n   return {\r\n      type: DEBIT_BALANCE_FAILURE,\r\n      payload: {\r\n         errorDebitBalanceMessage: e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\n","import { api } from '.'\r\nimport {\r\n   decrementProductQuantityFailure,\r\n   decrementProductQuantityRequest,\r\n   decrementProductQuantitySuccess,\r\n   fetchProductsFailure,\r\n   fetchProductsSuccess,\r\n   incrementProductQuantityFailure,\r\n   incrementProductQuantityRequest,\r\n   incrementProductQuantitySuccess,\r\n} from '../store/actions/productAction'\r\nimport { fetchProductsRequest } from './../store/actions/productAction'\r\n\r\nexport const fetchProducts = () => {\r\n   return (dispatch: any) => {\r\n      dispatch(fetchProductsRequest())\r\n      setTimeout(async () => {\r\n         await api\r\n            .get('/products')\r\n            .then((response) => dispatch(fetchProductsSuccess(response?.data)))\r\n            .catch((error) => dispatch(fetchProductsFailure(error)))\r\n      }, 1000)\r\n   }\r\n}\r\nexport const decrementProductQuantity = (id: number, quantity: number) => {\r\n   return async (dispatch: any) => {\r\n      dispatch(decrementProductQuantityRequest())\r\n      await api\r\n         .patch(`/products/${id}`, { quantity: quantity })\r\n         .then((response) =>\r\n            dispatch(decrementProductQuantitySuccess(response?.data))\r\n         )\r\n         .catch((error) => dispatch(decrementProductQuantityFailure(error)))\r\n   }\r\n}\r\nexport const incrementProductQuantity = (id: number, quantity: number) => {\r\n   return async (dispatch: any) => {\r\n      dispatch(incrementProductQuantityRequest())\r\n      const { data } = await api.get(`/products/${id}`)\r\n      const incrementedQuantity = data.quantity + quantity\r\n      await api\r\n         .patch(`/products/${id}`, { quantity: incrementedQuantity })\r\n         .then((response) =>\r\n            dispatch(incrementProductQuantitySuccess(response?.data))\r\n         )\r\n         .catch((error) => dispatch(incrementProductQuantityFailure(error)))\r\n   }\r\n}\r\n","import {\r\n   DECREMENT_PRODUCT_QUANTITY_FAILURE,\r\n   FETCH_PRODUCTS_FAILURE,\r\n   FETCH_PRODUCTS_REQUEST,\r\n   FETCH_PRODUCTS_SUCCESS,\r\n   INCREMENT_PRODUCT_QUANTITY_FAILURE,\r\n   INCREMENT_PRODUCT_QUANTITY_REQUEST,\r\n   INCREMENT_PRODUCT_QUANTITY_SUCCESS,\r\n} from '../../types/Types'\r\nimport {\r\n   DECREMENT_PRODUCT_QUANTITY_REQUEST,\r\n   DECREMENT_PRODUCT_QUANTITY_SUCCESS,\r\n} from './../../types/Types'\r\n\r\nexport const fetchProductsRequest = () => {\r\n   return {\r\n      type: FETCH_PRODUCTS_REQUEST,\r\n   }\r\n}\r\n\r\nexport const fetchProductsSuccess = (products: IProduct[]) => {\r\n   return {\r\n      type: FETCH_PRODUCTS_SUCCESS,\r\n      payload: { products: products },\r\n   }\r\n}\r\n\r\nexport const fetchProductsFailure = (e: Error) => {\r\n   return {\r\n      type: FETCH_PRODUCTS_FAILURE,\r\n      payload: {\r\n         errorProductFetchMessage: e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\n\r\nexport const decrementProductQuantityRequest = () => {\r\n   return {\r\n      type: DECREMENT_PRODUCT_QUANTITY_REQUEST,\r\n   }\r\n}\r\n\r\nexport const decrementProductQuantitySuccess = (product: IProduct) => {\r\n   return {\r\n      type: DECREMENT_PRODUCT_QUANTITY_SUCCESS,\r\n      payload: { product: product },\r\n   }\r\n}\r\n\r\nexport const decrementProductQuantityFailure = (e: Error) => {\r\n   return {\r\n      type: DECREMENT_PRODUCT_QUANTITY_FAILURE,\r\n      payload: {\r\n         errorDecrementProductQuantityMessage:\r\n            e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\nexport const incrementProductQuantityRequest = () => {\r\n   return {\r\n      type: INCREMENT_PRODUCT_QUANTITY_REQUEST,\r\n   }\r\n}\r\n\r\nexport const incrementProductQuantitySuccess = (product: IProduct) => {\r\n   return {\r\n      type: INCREMENT_PRODUCT_QUANTITY_SUCCESS,\r\n      payload: { product: product },\r\n   }\r\n}\r\n\r\nexport const incrementProductQuantityFailure = (e: Error) => {\r\n   return {\r\n      type: INCREMENT_PRODUCT_QUANTITY_FAILURE,\r\n      payload: {\r\n         errorIncrementProductQuantityMessage:\r\n            e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\n","import { api } from '.'\r\nimport {\r\n   addProductFailure,\r\n   addProductRequest,\r\n   addProductSuccess,\r\n   fetchPurchasedProductsFailure,\r\n   fetchPurchasedProductsRequest,\r\n   fetchPurchasedProductsSuccess,\r\n   removeProductFailure,\r\n   removeProductRequest,\r\n   removeProductSuccess,\r\n} from '../store/actions/purchasedProductsAction'\r\nimport { creditBalance, debitBalance } from './balanceApi'\r\nimport {\r\n   decrementProductQuantity,\r\n   incrementProductQuantity,\r\n} from './productsApi'\r\n\r\nexport const fetchPurchasedProducts = () => {\r\n   return (dispatch: any) => {\r\n      dispatch(fetchPurchasedProductsRequest())\r\n      setTimeout(async () => {\r\n         await api\r\n            .get('/purchasedproducts')\r\n            .then((response) =>\r\n               dispatch(fetchPurchasedProductsSuccess(response?.data))\r\n            )\r\n            .catch((error) => dispatch(fetchPurchasedProductsFailure(error)))\r\n      }, 1000)\r\n   }\r\n}\r\nexport const addProduct = (product: IProduct, balance: Ibalance) => {\r\n   let productTobePurchase: IProductPurchase = {\r\n      productId: product.id,\r\n      name: product.name,\r\n      price: product.price,\r\n      quantity: 1,\r\n      image: product.image,\r\n   }\r\n   return (dispatch: any) => {\r\n      dispatch(addProductRequest())\r\n      setTimeout(async () => {\r\n         await api\r\n            .post('/purchasedproducts', productTobePurchase)\r\n            .then((response) => dispatch(addProductSuccess(response?.data)))\r\n            .catch((error) => dispatch(addProductFailure(error)))\r\n\r\n         await dispatch(\r\n            decrementProductQuantity(product.id, product.quantity - 1)\r\n         )\r\n         await dispatch(debitBalance(balance.amount - product.price))\r\n      }, 1000)\r\n   }\r\n}\r\n\r\nexport const removeProduct = (purchaseProduct: IProductPurchaseProduct) => {\r\n   return (dispatch: any) => {\r\n      dispatch(removeProductRequest())\r\n      setTimeout(async () => {\r\n         await api\r\n            .delete(`/purchasedproducts/${purchaseProduct.id}`)\r\n            .then(() => dispatch(removeProductSuccess(purchaseProduct)))\r\n            .catch((error) => dispatch(removeProductFailure(error)))\r\n         await dispatch(\r\n            incrementProductQuantity(\r\n               purchaseProduct.productId,\r\n               purchaseProduct.quantity\r\n            )\r\n         )\r\n         await dispatch(creditBalance(purchaseProduct.price))\r\n      }, 1000)\r\n   }\r\n}\r\n","import {\r\n   ADD_PRODUCT_FAILURE,\r\n   ADD_PRODUCT_REQUEST,\r\n   ADD_PRODUCT_SUCCESS,\r\n   FETCH_PURCHASEDPRODUCTS_FAILURE,\r\n   FETCH_PURCHASEDPRODUCTS_REQUEST,\r\n   FETCH_PURCHASEDPRODUCTS_SUCCESS,\r\n   REMOVE_PRODUCT_FAILURE,\r\n   REMOVE_PRODUCT_REQUEST,\r\n   REMOVE_PRODUCT_SUCCESS,\r\n} from '../../types/Types'\r\n\r\nexport const fetchPurchasedProductsRequest = () => {\r\n   return {\r\n      type: FETCH_PURCHASEDPRODUCTS_REQUEST,\r\n   }\r\n}\r\n\r\nexport const fetchPurchasedProductsSuccess = (\r\n   purchasedProducts: IProductPurchaseProduct[]\r\n) => {\r\n   return {\r\n      type: FETCH_PURCHASEDPRODUCTS_SUCCESS,\r\n      payload: { purchasedProducts: purchasedProducts },\r\n   }\r\n}\r\n\r\nexport const fetchPurchasedProductsFailure = (e: Error) => {\r\n   return {\r\n      type: FETCH_PURCHASEDPRODUCTS_FAILURE,\r\n      payload: {\r\n         errorPurchasedProductsFetchMessage:\r\n            e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\n\r\nexport const addProductRequest = () => {\r\n   return {\r\n      type: ADD_PRODUCT_REQUEST,\r\n   }\r\n}\r\n\r\nexport const addProductSuccess = (\r\n   purchasedProduct: IProductPurchaseProduct\r\n) => {\r\n   return {\r\n      type: ADD_PRODUCT_SUCCESS,\r\n      payload: {\r\n         purchasedProducts: purchasedProduct,\r\n      },\r\n   }\r\n}\r\nexport const addProductFailure = (e: Error) => {\r\n   return {\r\n      type: ADD_PRODUCT_FAILURE,\r\n      payload: {\r\n         errorPurchasedProductsFetchMessage:\r\n            e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\nexport const removeProductRequest = () => {\r\n   return {\r\n      type: REMOVE_PRODUCT_REQUEST,\r\n   }\r\n}\r\n\r\nexport const removeProductSuccess = (\r\n   purchasedProduct: IProductPurchaseProduct\r\n) => {\r\n   return {\r\n      type: REMOVE_PRODUCT_SUCCESS,\r\n      payload: {\r\n         purchasedProduct: purchasedProduct,\r\n      },\r\n   }\r\n}\r\nexport const removeProductFailure = (e: Error) => {\r\n   return {\r\n      type: REMOVE_PRODUCT_FAILURE,\r\n      payload: {\r\n         errorRemovePurchasedProductsMessage:\r\n            e?.message || 'Internal Server Error',\r\n      },\r\n   }\r\n}\r\n","import { Box, Button, Stack, Text } from '@chakra-ui/react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { creditBalance } from '../api/balanceApi'\r\n\r\nexport const AddMoneyPannel = () => {\r\n   const dispatch = useDispatch()\r\n   const moneyOption = [10, 20, 30, 40, 50, 100, 500]\r\n\r\n   return (\r\n      <>\r\n         <Box bg=\"gray\" w=\"100%\" p={3} color=\"white\">\r\n            <Stack spacing={3}>\r\n               <Text fontSize=\"1xl\">Add Money </Text>\r\n            </Stack>\r\n         </Box>\r\n         <Box w=\"100%\" p={4} boxShadow=\"lg\" bg=\"gray.200\" rounded={'md'}>\r\n            <Stack spacing={4} direction=\"row\" align=\"center\">\r\n               {moneyOption.map((money, index) => {\r\n                  return (\r\n                     <Button\r\n                        key={index}\r\n                        onClick={() => dispatch(creditBalance(money))}\r\n                        colorScheme=\"pink\"\r\n                        size=\"sm\"\r\n                     >\r\n                        ₹ {money}\r\n                     </Button>\r\n                  )\r\n               })}\r\n            </Stack>\r\n         </Box>\r\n      </>\r\n   )\r\n}\r\n","import {\r\n   Alert,\r\n   AlertDescription,\r\n   AlertIcon,\r\n   AlertTitle,\r\n} from '@chakra-ui/react'\r\nimport PropTypes from 'prop-types' // ES6\r\ninterface Props {\r\n   status: any\r\n   title: string\r\n   description: string\r\n}\r\n\r\nexport const AlertMessage = ({ status, title, description }: Props) => {\r\n   return (\r\n      <Alert status={status}>\r\n         <AlertIcon />\r\n         <AlertTitle fontSize={15} mr={2}>\r\n            {title}\r\n         </AlertTitle>\r\n         <AlertDescription fontSize={15}>{description}</AlertDescription>\r\n      </Alert>\r\n   )\r\n}\r\nAlertMessage.propTypes = {\r\n   status: PropTypes.any,\r\n   title: PropTypes.string,\r\n   description: PropTypes.string,\r\n}\r\n","import { AddIcon } from '@chakra-ui/icons'\r\nimport { Box, Button, Image, Text } from '@chakra-ui/react'\r\nimport PropTypes from 'prop-types' // ES6\r\n\r\ninterface Props {\r\n   product: IProduct\r\n   balance: Ibalance\r\n   handleBuyProduct: Function\r\n   isPurchasedProductsFetching: boolean\r\n}\r\n\r\nexport const SingleProduct = ({\r\n   product,\r\n   balance,\r\n   handleBuyProduct,\r\n   isPurchasedProductsFetching,\r\n}: Props) => {\r\n   return (\r\n      <Box padding=\"6\" boxShadow=\"lg\" bg=\"gray.200\">\r\n         <Image\r\n            rounded={'md'}\r\n            objectFit={'cover'}\r\n            src={product?.image}\r\n            alt={product?.name}\r\n            w={'100%'}\r\n         />\r\n         <Text fontSize=\"1xl\" marginTop=\"5%\" pt={2}>\r\n            Name : {product?.name}\r\n         </Text>\r\n         <Text fontSize=\"1xl\" pt={2}>\r\n            Price : {product?.price}\r\n         </Text>\r\n\r\n         {product?.quantity === 0 && (\r\n            <Text color=\"red\" fontSize=\"1xl\" pt={2}>\r\n               Out of stock\r\n            </Text>\r\n         )}\r\n         {product?.quantity > 0 && (\r\n            <>\r\n               <Text fontSize=\"1xl\" pt={2}>\r\n                  Quantity : {product?.quantity}\r\n               </Text>\r\n               <Button\r\n                  onClick={() => handleBuyProduct(product)}\r\n                  w={'100%'}\r\n                  mt={3}\r\n                  colorScheme=\"teal\"\r\n                  size=\"md\"\r\n                  disabled={\r\n                     !(Number(balance?.amount) >= Number(product?.price)) ||\r\n                     isPurchasedProductsFetching\r\n                  }\r\n               >\r\n                  Buy <AddIcon marginLeft={2} w={3} h={3} />\r\n               </Button>\r\n            </>\r\n         )}\r\n      </Box>\r\n   )\r\n}\r\nSingleProduct.propTypes = {\r\n   product: PropTypes.object,\r\n   balance: PropTypes.object,\r\n   handleBuyProduct: PropTypes.func,\r\n   isPurchasedProductsFetching: PropTypes.bool,\r\n}\r\n","import { Box, Grid } from '@chakra-ui/react'\r\nimport PropTypes from 'prop-types' // ES6\r\nimport { SingleProduct } from './singleProduct'\r\ninterface Props {\r\n   products: IProduct[]\r\n   balance: Ibalance\r\n   handleBuyProduct: Function\r\n   isPurchasedProductsFetching: boolean\r\n}\r\n\r\nexport const ProductsList = ({\r\n   products,\r\n   balance,\r\n   handleBuyProduct,\r\n   isPurchasedProductsFetching,\r\n}: Props) => {\r\n   return (\r\n      <>\r\n         <Box\r\n            border=\"1px solid #eeeee4\"\r\n            padding=\"1rem\"\r\n            bg=\"white\"\r\n            w=\"100%\"\r\n            color=\"black\"\r\n            rounded={'md'}\r\n         >\r\n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\r\n               {products &&\r\n                  products.length > 0 &&\r\n                  products.map((product) => {\r\n                     return (\r\n                        <SingleProduct\r\n                           key={product?.id}\r\n                           product={product}\r\n                           balance={balance}\r\n                           handleBuyProduct={handleBuyProduct}\r\n                           isPurchasedProductsFetching={\r\n                              isPurchasedProductsFetching\r\n                           }\r\n                        />\r\n                     )\r\n                  })}\r\n            </Grid>\r\n         </Box>\r\n      </>\r\n   )\r\n}\r\nProductsList.propTypes = {\r\n   products: PropTypes.array,\r\n   balance: PropTypes.object,\r\n   handleBuyProduct: PropTypes.func,\r\n   isPurchasedProductsFetching: PropTypes.bool,\r\n}\r\n","import { Box, Progress, Skeleton, Stack, Text } from '@chakra-ui/react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addProduct } from '../api/purchasedProductsApi'\r\nimport { AlertMessage } from '../components/AlertMessage'\r\nimport { ProductsList } from '../containers/productsList'\r\nimport { RootState } from '../store/reducers'\r\n\r\nexport const Product = () => {\r\n   const dispatch = useDispatch()\r\n   const {\r\n      products,\r\n      isProductFetching,\r\n      isProductFetchSuccess,\r\n      isProductFetchError,\r\n      errorProductFetchMessage,\r\n   } = useSelector((state: RootState) => {\r\n      return state.product\r\n   })\r\n   const { balance } = useSelector((state: RootState) => {\r\n      return state.balance\r\n   })\r\n   const { isPurchasedProductsFetching } = useSelector((state: RootState) => {\r\n      return state.purchasedProducts\r\n   })\r\n\r\n   const handleBuyProduct = (product: IProduct) => {\r\n      dispatch(addProduct(product, balance))\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Box bg=\"gray\" w=\"100%\" p={3} color=\"white\">\r\n            <Stack spacing={3}>\r\n               <Text fontSize=\"1xl\">Products</Text>\r\n            </Stack>\r\n         </Box>\r\n\r\n         {isPurchasedProductsFetching && (\r\n            <Box w=\"100%\" boxShadow=\"lg\" bg=\"gray.200\">\r\n               <Progress size=\"lg\" isIndeterminate />\r\n            </Box>\r\n         )}\r\n\r\n         {products && !isProductFetching && products.length > 0 && (\r\n            <ProductsList\r\n               products={products}\r\n               balance={balance}\r\n               handleBuyProduct={handleBuyProduct}\r\n               isPurchasedProductsFetching={isPurchasedProductsFetching}\r\n            />\r\n         )}\r\n         {products && isProductFetchSuccess && products.length === 0 && (\r\n            <AlertMessage\r\n               status=\"error\"\r\n               title=\"No Products Found\"\r\n               description=\"Seems there are no products available.\"\r\n            />\r\n         )}\r\n         {isProductFetchError && (\r\n            <AlertMessage\r\n               status=\"error\"\r\n               title=\"Some Error Occured\"\r\n               description={errorProductFetchMessage}\r\n            />\r\n         )}\r\n         {isProductFetching && (\r\n            <Stack>\r\n               <Skeleton height=\"30px\" />\r\n               <Skeleton height=\"30px\" />\r\n               <Skeleton height=\"30px\" />\r\n            </Stack>\r\n         )}\r\n      </>\r\n   )\r\n}\r\n","import { AlertStatus, useToast, Wrap } from '@chakra-ui/react'\r\nimport PropTypes from 'prop-types' // ES6\r\nimport { useEffect } from 'react'\r\n\r\ninterface Props {\r\n   title: string\r\n   description: string\r\n   status: AlertStatus\r\n}\r\n\r\nexport const ToastNotification = ({ title, description, status }: Props) => {\r\n   const toast = useToast()\r\n   useEffect(() => {\r\n      toast({\r\n         title: title,\r\n         description: description,\r\n         isClosable: true,\r\n         status: status,\r\n         duration: 2000,\r\n         position: 'top-right',\r\n      })\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [])\r\n   return <Wrap></Wrap>\r\n}\r\nToastNotification.propTypes = {\r\n   title: PropTypes.string,\r\n   description: PropTypes.string,\r\n   status: PropTypes.any,\r\n}\r\n","import { DeleteIcon } from '@chakra-ui/icons'\r\nimport { Box, Button, Image, Stack, Text } from '@chakra-ui/react'\r\n\r\ninterface Props {\r\n   purchasedProduct: IProductPurchaseProduct\r\n   handleRemovePurchasedProduct: Function\r\n}\r\n\r\nexport const SinglePurchasedProduct = ({\r\n   purchasedProduct,\r\n   handleRemovePurchasedProduct,\r\n}: Props) => {\r\n   return (\r\n      <>\r\n         <Stack direction={['column', 'row']} spacing=\"24px\">\r\n            <Box>\r\n               <Image\r\n                  objectFit={'cover'}\r\n                  src={purchasedProduct?.image}\r\n                  rounded={'md'}\r\n                  alt={purchasedProduct?.name}\r\n                  w={'100%'}\r\n                  h={'100%'}\r\n               />\r\n            </Box>\r\n            <Box>\r\n               <Text fontSize=\"1xl\" marginTop=\"5%\" pt={2}>\r\n                  Name : {purchasedProduct?.name}\r\n               </Text>\r\n               <Text fontSize=\"1xl\" pt={2}>\r\n                  Price : {purchasedProduct?.price}\r\n               </Text>\r\n               <Text fontSize=\"1xl\" pt={2}>\r\n                  Quantity : {purchasedProduct?.quantity}\r\n               </Text>\r\n               <Button\r\n                  w={'100%'}\r\n                  mt={3}\r\n                  colorScheme=\"red\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleRemovePurchasedProduct(purchasedProduct)}\r\n               >\r\n                  Remove <DeleteIcon marginLeft={2} w={3} h={3} />\r\n               </Button>\r\n            </Box>\r\n         </Stack>\r\n      </>\r\n   )\r\n}\r\n","import { Box, StackDivider, VStack } from '@chakra-ui/react'\r\nimport PropTypes from 'prop-types' // ES6\r\nimport { SinglePurchasedProduct } from './singlePurchasedProduct'\r\n\r\ninterface Props {\r\n   purchasedProducts: IProductPurchaseProduct[]\r\n   handleRemovePurchasedProduct: Function\r\n}\r\n\r\nexport const PurchasedProductList = ({\r\n   purchasedProducts,\r\n   handleRemovePurchasedProduct,\r\n}: Props) => {\r\n   return (\r\n      <>\r\n         <Box\r\n            border=\"1px solid #eeeee4\"\r\n            padding=\"1rem\"\r\n            bg=\"white\"\r\n            w=\"100%\"\r\n            color=\"black\"\r\n            rounded={'md'}\r\n         >\r\n            <VStack\r\n               divider={<StackDivider borderColor=\"gray.200\" />}\r\n               spacing={4}\r\n               align=\"stretch\"\r\n            >\r\n               {purchasedProducts &&\r\n                  purchasedProducts.length > 0 &&\r\n                  purchasedProducts.map((purchasedProduct) => {\r\n                     return (\r\n                        <SinglePurchasedProduct\r\n                           key={purchasedProduct?.id}\r\n                           purchasedProduct={purchasedProduct}\r\n                           handleRemovePurchasedProduct={\r\n                              handleRemovePurchasedProduct\r\n                           }\r\n                        />\r\n                     )\r\n                  })}\r\n            </VStack>\r\n         </Box>\r\n      </>\r\n   )\r\n}\r\nPurchasedProductList.propTypes = {\r\n   purchasedProducts: PropTypes.array,\r\n   handleRemovePurchasedProduct: PropTypes.func,\r\n}\r\n","import { Box, Skeleton, Stack, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeProduct } from '../api/purchasedProductsApi'\r\nimport { AlertMessage } from '../components/AlertMessage'\r\nimport { ToastNotification } from '../components/ToastNotification'\r\nimport { PurchasedProductList } from '../containers/purchasedProductList'\r\nimport { RootState } from '../store/reducers'\r\n\r\nexport const PurchasedProducts = () => {\r\n   const dispatch = useDispatch()\r\n   const {\r\n      purchasedProducts,\r\n      isPurchasedProductsFetching,\r\n      isPurchasedProductsFetchError,\r\n      errorPurchasedProductsFetchMessage,\r\n      isAddPurchasedProductSuccess,\r\n      isAddPurchasedProductError,\r\n      errorAddPurchasedProductsMessage,\r\n      isRemovePurchasedProductSuccess,\r\n      isRemovePurchasedProductError,\r\n      errorRemovePurchasedProductsMessage,\r\n   } = useSelector((state: RootState) => {\r\n      return state.purchasedProducts\r\n   })\r\n\r\n   const handleRemovePurchasedProduct = (\r\n      purchasedProduct: IProductPurchaseProduct\r\n   ) => {\r\n      dispatch(removeProduct(purchasedProduct))\r\n   }\r\n\r\n   return (\r\n      <>\r\n         {purchasedProducts && purchasedProducts.length > 0 && (\r\n            <>\r\n               <Box bg=\"gray\" w=\"100%\" p={3} color=\"white\">\r\n                  <Stack spacing={3}>\r\n                     <Text fontSize=\"1xl\">Purchased Products</Text>\r\n                  </Stack>\r\n               </Box>\r\n               <PurchasedProductList\r\n                  purchasedProducts={purchasedProducts}\r\n                  handleRemovePurchasedProduct={handleRemovePurchasedProduct}\r\n               />\r\n            </>\r\n         )}\r\n\r\n         {isPurchasedProductsFetchError && (\r\n            <AlertMessage\r\n               status=\"error\"\r\n               title=\"Some Error Occured\"\r\n               description={errorPurchasedProductsFetchMessage}\r\n            />\r\n         )}\r\n         {isPurchasedProductsFetching && (\r\n            <Stack>\r\n               <Skeleton height=\"20px\" />\r\n               <Skeleton height=\"20px\" />\r\n               <Skeleton height=\"20px\" />\r\n            </Stack>\r\n         )}\r\n\r\n         {isAddPurchasedProductSuccess && (\r\n            <ToastNotification\r\n               title=\"Buy Product success!\"\r\n               description=\"You can see product in product purchase list.\"\r\n               status=\"success\"\r\n            />\r\n         )}\r\n         {isRemovePurchasedProductSuccess && (\r\n            <ToastNotification\r\n               title=\"Remove Product success!\"\r\n               description=\"Product has been removed from purchase list, amount shall be credited soon to your wallet.\"\r\n               status=\"success\"\r\n            />\r\n         )}\r\n         {isAddPurchasedProductError && (\r\n            <ToastNotification\r\n               title=\"Buy product failed !\"\r\n               description={errorAddPurchasedProductsMessage}\r\n               status=\"error\"\r\n            />\r\n         )}\r\n         {isRemovePurchasedProductError && (\r\n            <ToastNotification\r\n               title=\"Remove product failed !\"\r\n               description={errorRemovePurchasedProductsMessage}\r\n               status=\"error\"\r\n            />\r\n         )}\r\n      </>\r\n   )\r\n}\r\n","import {\r\n   Box,\r\n   Progress,\r\n   Skeleton,\r\n   Stack,\r\n   Stat,\r\n   StatLabel,\r\n   StatNumber,\r\n   Text,\r\n} from '@chakra-ui/react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AlertMessage } from '../components/AlertMessage'\r\nimport { ToastNotification } from '../components/ToastNotification'\r\nimport { RootState } from '../store/reducers'\r\n\r\nexport const Wallet = () => {\r\n   const {\r\n      balance,\r\n      isBalanceFetching,\r\n      isBalanceFetchSuccess,\r\n      isBalanceFetchError,\r\n      errorBalanceFetchMessage,\r\n      isCreditBalanceSuccess,\r\n      isCreditBalanceError,\r\n      errorCreditBalanceMessage,\r\n   } = useSelector((state: RootState) => {\r\n      return state.balance\r\n   })\r\n\r\n   return (\r\n      <>\r\n         <Box bg=\"gray\" w=\"100%\" p={3} color=\"white\">\r\n            <Stack spacing={3}>\r\n               <Text fontSize=\"1xl\">Wallet</Text>\r\n            </Stack>\r\n         </Box>\r\n\r\n         {balance && isBalanceFetchSuccess && (\r\n            <>\r\n               <Box w=\"100%\" p={4} boxShadow=\"lg\" bg=\"gray.200\" rounded={'md'}>\r\n                  <Stack spacing={4} direction=\"row\" align=\"center\">\r\n                     <Stat\r\n                        h={'10%'}\r\n                        p={4}\r\n                        boxShadow=\"lg\"\r\n                        bg=\"white\"\r\n                        rounded={'md'}\r\n                     >\r\n                        <StatLabel>Available Balance</StatLabel>\r\n                        <StatNumber>₹ {balance?.amount}</StatNumber>\r\n                     </Stat>\r\n                  </Stack>\r\n               </Box>\r\n            </>\r\n         )}\r\n         {isBalanceFetching && isBalanceFetchSuccess && (\r\n            <>\r\n               <Box w=\"100%\" boxShadow=\"lg\" bg=\"gray.200\">\r\n                  <Progress size=\"xs\" isIndeterminate />\r\n               </Box>\r\n            </>\r\n         )}\r\n         {isCreditBalanceSuccess && (\r\n            <ToastNotification\r\n               title=\"Balance Credited !\"\r\n               description=\"Amount has been credited into your wallet.\"\r\n               status=\"success\"\r\n            />\r\n         )}\r\n         {isCreditBalanceError && (\r\n            <ToastNotification\r\n               title=\"Error Occured !\"\r\n               description={errorCreditBalanceMessage}\r\n               status=\"error\"\r\n            />\r\n         )}\r\n\r\n         {isBalanceFetchError && (\r\n            <AlertMessage\r\n               status=\"error\"\r\n               title=\"Some Error Occured\"\r\n               description={errorBalanceFetchMessage}\r\n            />\r\n         )}\r\n         {isBalanceFetching && !isBalanceFetchSuccess && (\r\n            <Stack>\r\n               <Skeleton height=\"20px\" />\r\n               <Skeleton height=\"20px\" />\r\n               <Skeleton height=\"20px\" />\r\n            </Stack>\r\n         )}\r\n      </>\r\n   )\r\n}\r\n","import {\r\n   Center,\r\n   Container,\r\n   Flex,\r\n   SimpleGrid,\r\n   Stack,\r\n   Text,\r\n} from '@chakra-ui/react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchBalance } from './api/balanceApi'\r\nimport { fetchProducts } from './api/productsApi'\r\nimport { fetchPurchasedProducts } from './api/purchasedProductsApi'\r\nimport './App.css'\r\nimport { AddMoneyPannel } from './pages/addMoneyPannel'\r\nimport { Product } from './pages/product'\r\nimport { PurchasedProducts } from './pages/purchasedProducts'\r\nimport { Wallet } from './pages/wallet'\r\n\r\nfunction App() {\r\n   const dispatch = useDispatch()\r\n\r\n   useEffect(() => {\r\n      dispatch(fetchProducts())\r\n      dispatch(fetchBalance())\r\n      dispatch(fetchPurchasedProducts())\r\n   }, [dispatch])\r\n   return (\r\n      <Container maxW={'8xl'} py={10}>\r\n         <Center>\r\n            <Text\r\n               textTransform={'uppercase'}\r\n               color={'blue.400'}\r\n               fontWeight={600}\r\n               fontSize={'lg'}\r\n               p={2}\r\n               alignSelf={'flex-center'}\r\n               rounded={'md'}\r\n            >\r\n               Vending Machine\r\n            </Text>\r\n         </Center>\r\n\r\n         <SimpleGrid columns={{ base: 1, md: 2 }} spacing={5}>\r\n            <Stack spacing={4}>\r\n               <Product />\r\n            </Stack>\r\n            <Flex>\r\n               <Stack marginLeft={20} spacing={4}>\r\n                  <Wallet />\r\n                  <AddMoneyPannel />\r\n                  <PurchasedProducts />\r\n               </Stack>\r\n            </Flex>\r\n         </SimpleGrid>\r\n      </Container>\r\n   )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n   if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(\r\n         ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry)\r\n            getFID(onPerfEntry)\r\n            getFCP(onPerfEntry)\r\n            getLCP(onPerfEntry)\r\n            getTTFB(onPerfEntry)\r\n         }\r\n      )\r\n   }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import {\r\n   CREDIT_BALANCE_FAILURE,\r\n   CREDIT_BALANCE_REQUEST,\r\n   CREDIT_BALANCE_SUCCESS,\r\n   DEBIT_BALANCE_FAILURE,\r\n   DEBIT_BALANCE_REQUEST,\r\n   DEBIT_BALANCE_SUCCESS,\r\n   FETCH_BALANCE_FAILURE,\r\n   FETCH_BALANCE_REQUEST,\r\n   FETCH_BALANCE_SUCCESS,\r\n} from './../../types/Types'\r\n\r\nconst initialState: BalanceState = {\r\n   balance: { amount: 0 },\r\n   isBalanceFetching: false,\r\n   isBalanceFetchSuccess: false,\r\n   isBalanceFetchError: false,\r\n   errorBalanceFetchMessage: '',\r\n   isCreditBalanceSuccess: false,\r\n   isCreditBalanceError: false,\r\n   errorCreditBalanceMessage: '',\r\n   isDebitBalanceSuccess: false,\r\n   isDebitBalanceError: false,\r\n   errorDebitBalanceMessage: '',\r\n}\r\n\r\nexport const balanceReducer = (\r\n   state = initialState,\r\n   action: BalanceAction\r\n): BalanceState => {\r\n   switch (action?.type) {\r\n      case FETCH_BALANCE_REQUEST:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: true,\r\n         }\r\n\r\n      case FETCH_BALANCE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: false,\r\n            isBalanceFetchSuccess: true,\r\n            balance: action?.payload?.balance,\r\n         }\r\n\r\n      case FETCH_BALANCE_FAILURE:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: false,\r\n            isBalanceFetchError: true,\r\n            errorBalanceFetchMessage: action?.payload?.errorBalanceFetchMessage,\r\n         }\r\n\r\n      case CREDIT_BALANCE_REQUEST:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: true,\r\n            isCreditBalanceSuccess: false,\r\n            isCreditBalanceError: false,\r\n         }\r\n\r\n      case CREDIT_BALANCE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: false,\r\n            isCreditBalanceSuccess: true,\r\n            balance: action?.payload?.balance,\r\n         }\r\n\r\n      case CREDIT_BALANCE_FAILURE:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: false,\r\n            isCreditBalanceError: true,\r\n            errorCreditBalanceMessage:\r\n               action?.payload?.errorCreditBalanceMessage,\r\n         }\r\n\r\n      case DEBIT_BALANCE_REQUEST:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: true,\r\n            isDebitBalanceSuccess: false,\r\n            isDebitBalanceError: false,\r\n         }\r\n\r\n      case DEBIT_BALANCE_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: false,\r\n            isDebitBalanceSuccess: true,\r\n            balance: action?.payload?.balance,\r\n         }\r\n\r\n      case DEBIT_BALANCE_FAILURE:\r\n         return {\r\n            ...state,\r\n            isBalanceFetching: false,\r\n            isDebitBalanceError: true,\r\n            errorDebitBalanceMessage: action?.payload?.errorDebitBalanceMessage,\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","import {\r\n   DECREMENT_PRODUCT_QUANTITY_FAILURE,\r\n   DECREMENT_PRODUCT_QUANTITY_REQUEST,\r\n   DECREMENT_PRODUCT_QUANTITY_SUCCESS,\r\n   FETCH_PRODUCTS_FAILURE,\r\n   FETCH_PRODUCTS_REQUEST,\r\n   FETCH_PRODUCTS_SUCCESS,\r\n   INCREMENT_PRODUCT_QUANTITY_FAILURE,\r\n   INCREMENT_PRODUCT_QUANTITY_REQUEST,\r\n   INCREMENT_PRODUCT_QUANTITY_SUCCESS,\r\n} from '../../types/Types'\r\n\r\nconst initialState: ProductState = {\r\n   products: [],\r\n   product: {\r\n      name: '',\r\n      price: 0,\r\n      quantity: 0,\r\n      image: {},\r\n      id: 0,\r\n   },\r\n   isProductFetching: false,\r\n   isProductFetchSuccess: false,\r\n   isProductFetchError: false,\r\n   errorProductFetchMessage: '',\r\n   isDecrementProductQuantitySuccess: false,\r\n   isDecrementProductQuantityError: false,\r\n   errorDecrementProductQuantityMessage: '',\r\n   isIncrementProductQuantitySuccess: false,\r\n   isIncrementProductQuantityError: false,\r\n   errorIncrementProductQuantityMessage: '',\r\n}\r\nexport const productReducer = (\r\n   state = initialState,\r\n   action: ProductAction\r\n): ProductState => {\r\n   switch (action?.type) {\r\n      case FETCH_PRODUCTS_REQUEST:\r\n         return {\r\n            ...state,\r\n            isProductFetching: true,\r\n         }\r\n\r\n      case FETCH_PRODUCTS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isProductFetching: false,\r\n            isProductFetchSuccess: true,\r\n            products: action?.payload?.products,\r\n         }\r\n\r\n      case FETCH_PRODUCTS_FAILURE:\r\n         return {\r\n            ...state,\r\n            isProductFetching: false,\r\n            isProductFetchError: true,\r\n            errorProductFetchMessage: action?.payload?.errorProductFetchMessage,\r\n         }\r\n\r\n      case DECREMENT_PRODUCT_QUANTITY_REQUEST:\r\n         return {\r\n            ...state,\r\n            isProductFetching: true,\r\n         }\r\n\r\n      case DECREMENT_PRODUCT_QUANTITY_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isProductFetching: false,\r\n            isDecrementProductQuantitySuccess: true,\r\n            products: state.products.map((product) =>\r\n               product.id === action.payload.product.id\r\n                  ? action.payload.product\r\n                  : product\r\n            ),\r\n         }\r\n\r\n      case DECREMENT_PRODUCT_QUANTITY_FAILURE:\r\n         return {\r\n            ...state,\r\n            isProductFetching: false,\r\n            isDecrementProductQuantityError: true,\r\n            errorDecrementProductQuantityMessage:\r\n               action?.payload?.errorDecrementProductQuantityMessage,\r\n         }\r\n\r\n      case INCREMENT_PRODUCT_QUANTITY_REQUEST:\r\n         return {\r\n            ...state,\r\n            isProductFetching: true,\r\n         }\r\n\r\n      case INCREMENT_PRODUCT_QUANTITY_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isProductFetching: false,\r\n            isIncrementProductQuantitySuccess: true,\r\n            products: state.products.map((product) =>\r\n               product.id === action.payload.product.id\r\n                  ? action.payload.product\r\n                  : product\r\n            ),\r\n         }\r\n\r\n      case INCREMENT_PRODUCT_QUANTITY_FAILURE:\r\n         return {\r\n            ...state,\r\n            isProductFetching: false,\r\n            isIncrementProductQuantityError: true,\r\n            errorIncrementProductQuantityMessage:\r\n               action?.payload?.errorIncrementProductQuantityMessage,\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","import {\r\n   ADD_PRODUCT_FAILURE,\r\n   ADD_PRODUCT_REQUEST,\r\n   ADD_PRODUCT_SUCCESS,\r\n   FETCH_PURCHASEDPRODUCTS_FAILURE,\r\n   FETCH_PURCHASEDPRODUCTS_REQUEST,\r\n   FETCH_PURCHASEDPRODUCTS_SUCCESS,\r\n   REMOVE_PRODUCT_FAILURE,\r\n   REMOVE_PRODUCT_REQUEST,\r\n   REMOVE_PRODUCT_SUCCESS,\r\n} from './../../types/Types'\r\n\r\nconst initialState: PurchasedProductsState = {\r\n   purchasedProducts: [],\r\n   purchasedProduct: {\r\n      id: 0,\r\n      name: '',\r\n      price: 0,\r\n      quantity: 0,\r\n      image: null,\r\n      productId: 0,\r\n   },\r\n   isPurchasedProductsFetching: false,\r\n   isPurchasedProductsFetchSuccess: false,\r\n   isPurchasedProductsFetchError: false,\r\n   errorPurchasedProductsFetchMessage: '',\r\n   isAddPurchasedProductSuccess: false,\r\n   isAddPurchasedProductError: false,\r\n   errorAddPurchasedProductsMessage: '',\r\n   isRemovePurchasedProductSuccess: false,\r\n   isRemovePurchasedProductError: false,\r\n   errorRemovePurchasedProductsMessage: '',\r\n}\r\n\r\nexport const purchasedProducts = (\r\n   state = initialState,\r\n   action: PurchasedProductsAction\r\n): PurchasedProductsState => {\r\n   switch (action?.type) {\r\n      case FETCH_PURCHASEDPRODUCTS_REQUEST:\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: true,\r\n         }\r\n\r\n      case FETCH_PURCHASEDPRODUCTS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: false,\r\n            isPurchasedProductsFetchSuccess: true,\r\n            purchasedProducts: action?.payload?.purchasedProducts,\r\n         }\r\n\r\n      case FETCH_PURCHASEDPRODUCTS_FAILURE:\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: false,\r\n            isPurchasedProductsFetchError: true,\r\n            errorPurchasedProductsFetchMessage:\r\n               action?.payload?.errorPurchasedProductsFetchMessage,\r\n         }\r\n      case ADD_PRODUCT_REQUEST: {\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: true,\r\n            isAddPurchasedProductSuccess: false,\r\n            isAddPurchasedProductError: false,\r\n         }\r\n      }\r\n      case ADD_PRODUCT_SUCCESS: {\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: false,\r\n            isAddPurchasedProductSuccess: true,\r\n            purchasedProducts: state.purchasedProducts.concat(\r\n               action?.payload?.purchasedProducts\r\n            ),\r\n         }\r\n      }\r\n      case ADD_PRODUCT_FAILURE:\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: false,\r\n            isAddPurchasedProductError: true,\r\n            errorAddPurchasedProductsMessage:\r\n               action?.payload?.errorAddPurchasedProductsMessage,\r\n         }\r\n\r\n      case REMOVE_PRODUCT_REQUEST: {\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: true,\r\n            isRemovePurchasedProductSuccess: false,\r\n            isRemovePurchasedProductError: false,\r\n         }\r\n      }\r\n      case REMOVE_PRODUCT_SUCCESS: {\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: false,\r\n            isRemovePurchasedProductSuccess: true,\r\n            purchasedProducts: state.purchasedProducts.filter(\r\n               (purchasedProduct) =>\r\n                  purchasedProduct.id !== action.payload.purchasedProduct.id\r\n            ),\r\n         }\r\n      }\r\n      case REMOVE_PRODUCT_FAILURE:\r\n         return {\r\n            ...state,\r\n            isPurchasedProductsFetching: false,\r\n            isRemovePurchasedProductError: true,\r\n            errorRemovePurchasedProductsMessage:\r\n               action?.payload?.errorRemovePurchasedProductsMessage,\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { balanceReducer } from './balanceReducer'\r\nimport { productReducer } from './productReducer'\r\nimport { purchasedProducts } from './purchasedProductsReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n   product: productReducer,\r\n   balance: balanceReducer,\r\n   purchasedProducts: purchasedProducts,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport default rootReducer\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { createLogger } from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst logger = createLogger({})\r\n\r\nexport default function configureAppStore(preloadedState: any) {\r\n   const store = configureStore({\r\n      reducer: rootReducer,\r\n      middleware: [logger, ...getDefaultMiddleware({ thunk: true }), thunk],\r\n      preloadedState,\r\n      enhancers: [],\r\n   })\r\n\r\n   return store\r\n}\r\n","import { ChakraProvider } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport configureAppStore from './store'\r\nconst store = configureAppStore({})\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <ChakraProvider>\r\n         <Provider store={store}>\r\n            <App />\r\n         </Provider>\r\n      </ChakraProvider>\r\n   </React.StrictMode>,\r\n   document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}